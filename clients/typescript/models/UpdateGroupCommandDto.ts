/* tslint:disable */
/* eslint-disable */
/**
 * Users API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: all
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateGroupCommandDto
 */
export interface UpdateGroupCommandDto {
    /**
     * 
     * @type {number}
     * @memberof UpdateGroupCommandDto
     */
    identifier: number;
    /**
     * 
     * @type {string}
     * @memberof UpdateGroupCommandDto
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof UpdateGroupCommandDto
     */
    trainerId: number;
}

/**
 * Check if a given object implements the UpdateGroupCommandDto interface.
 */
export function instanceOfUpdateGroupCommandDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "identifier" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "trainerId" in value;

    return isInstance;
}

export function UpdateGroupCommandDtoFromJSON(json: any): UpdateGroupCommandDto {
    return UpdateGroupCommandDtoFromJSONTyped(json, false);
}

export function UpdateGroupCommandDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateGroupCommandDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'identifier': json['identifier'],
        'name': json['name'],
        'trainerId': json['trainerId'],
    };
}

export function UpdateGroupCommandDtoToJSON(value?: UpdateGroupCommandDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'identifier': value.identifier,
        'name': value.name,
        'trainerId': value.trainerId,
    };
}

